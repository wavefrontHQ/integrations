/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * NewRelicMetricFilters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class NewRelicMetricFilters {
  @SerializedName("appName")
  private String appName = null;

  @SerializedName("metricFilterRegex")
  private String metricFilterRegex = null;

  public NewRelicMetricFilters appName(String appName) {
    this.appName = appName;
    return this;
  }

  /**
   * Get appName
   *
   * @return appName
   **/
  @ApiModelProperty(value = "")
  public String getAppName() {
    return appName;
  }

  public void setAppName(String appName) {
    this.appName = appName;
  }

  public NewRelicMetricFilters metricFilterRegex(String metricFilterRegex) {
    this.metricFilterRegex = metricFilterRegex;
    return this;
  }

  /**
   * Get metricFilterRegex
   *
   * @return metricFilterRegex
   **/
  @ApiModelProperty(value = "")
  public String getMetricFilterRegex() {
    return metricFilterRegex;
  }

  public void setMetricFilterRegex(String metricFilterRegex) {
    this.metricFilterRegex = metricFilterRegex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewRelicMetricFilters newRelicMetricFilters = (NewRelicMetricFilters) o;
    return Objects.equals(this.appName, newRelicMetricFilters.appName) &&
        Objects.equals(this.metricFilterRegex, newRelicMetricFilters.metricFilterRegex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appName, metricFilterRegex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewRelicMetricFilters {\n");

    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    metricFilterRegex: ").append(toIndentedString(metricFilterRegex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

