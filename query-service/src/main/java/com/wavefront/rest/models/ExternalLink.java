/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Links that can be generated from Wavefront to other analytical platforms
 */
@ApiModel(description = "Links that can be generated from Wavefront to other analytical platforms")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class ExternalLink {
  @SerializedName("description")
  private String description = null;

  @SerializedName("creatorId")
  private String creatorId = null;

  @SerializedName("updaterId")
  private String updaterId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("template")
  private String template = null;

  @SerializedName("metricFilterRegex")
  private String metricFilterRegex = null;

  @SerializedName("sourceFilterRegex")
  private String sourceFilterRegex = null;

  @SerializedName("pointTagFilterRegexes")
  private Map<String, String> pointTagFilterRegexes = null;

  @SerializedName("createdEpochMillis")
  private Long createdEpochMillis = null;

  @SerializedName("updatedEpochMillis")
  private Long updatedEpochMillis = null;

  @SerializedName("name")
  private String name = null;

  public ExternalLink description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Human-readable description for this external link
   *
   * @return description
   **/
  @ApiModelProperty(required = true, value = "Human-readable description for this external link")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Get creatorId
   *
   * @return creatorId
   **/
  @ApiModelProperty(value = "")
  public String getCreatorId() {
    return creatorId;
  }

  /**
   * Get updaterId
   *
   * @return updaterId
   **/
  @ApiModelProperty(value = "")
  public String getUpdaterId() {
    return updaterId;
  }

  public ExternalLink id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ExternalLink template(String template) {
    this.template = template;
    return this;
  }

  /**
   * The mustache template for this link.  This template must expand to a full URL, including scheme, origin, etc
   *
   * @return template
   **/
  @ApiModelProperty(required = true, value = "The mustache template for this link.  This template must expand to a full URL, including scheme, origin, etc")
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }

  public ExternalLink metricFilterRegex(String metricFilterRegex) {
    this.metricFilterRegex = metricFilterRegex;
    return this;
  }

  /**
   * Controls whether a link displayed in the context menu of a highlighted series.  If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed
   *
   * @return metricFilterRegex
   **/
  @ApiModelProperty(value = "Controls whether a link displayed in the context menu of a highlighted series.  If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed")
  public String getMetricFilterRegex() {
    return metricFilterRegex;
  }

  public void setMetricFilterRegex(String metricFilterRegex) {
    this.metricFilterRegex = metricFilterRegex;
  }

  public ExternalLink sourceFilterRegex(String sourceFilterRegex) {
    this.sourceFilterRegex = sourceFilterRegex;
    return this;
  }

  /**
   * Controls whether a link displayed in the context menu of a highlighted series.  If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed
   *
   * @return sourceFilterRegex
   **/
  @ApiModelProperty(value = "Controls whether a link displayed in the context menu of a highlighted series.  If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed")
  public String getSourceFilterRegex() {
    return sourceFilterRegex;
  }

  public void setSourceFilterRegex(String sourceFilterRegex) {
    this.sourceFilterRegex = sourceFilterRegex;
  }

  public ExternalLink pointTagFilterRegexes(Map<String, String> pointTagFilterRegexes) {
    this.pointTagFilterRegexes = pointTagFilterRegexes;
    return this;
  }

  public ExternalLink putPointTagFilterRegexesItem(String key, String pointTagFilterRegexesItem) {
    if (this.pointTagFilterRegexes == null) {
      this.pointTagFilterRegexes = new HashMap<String, String>();
    }
    this.pointTagFilterRegexes.put(key, pointTagFilterRegexesItem);
    return this;
  }

  /**
   * Controls whether a link displayed in the context menu of a highlighted series.  This is a map from string to regular expression. The highlighted series must contain point tags whose keys are present in the keys of this map and whose values match the regular expressions associated with those keys in order for the link to be displayed
   *
   * @return pointTagFilterRegexes
   **/
  @ApiModelProperty(value = "Controls whether a link displayed in the context menu of a highlighted series.  This is a map from string to regular expression. The highlighted series must contain point tags whose keys are present in the keys of this map and whose values match the regular expressions associated with those keys in order for the link to be displayed")
  public Map<String, String> getPointTagFilterRegexes() {
    return pointTagFilterRegexes;
  }

  public void setPointTagFilterRegexes(Map<String, String> pointTagFilterRegexes) {
    this.pointTagFilterRegexes = pointTagFilterRegexes;
  }

  /**
   * Get createdEpochMillis
   *
   * @return createdEpochMillis
   **/
  @ApiModelProperty(value = "")
  public Long getCreatedEpochMillis() {
    return createdEpochMillis;
  }

  /**
   * Get updatedEpochMillis
   *
   * @return updatedEpochMillis
   **/
  @ApiModelProperty(value = "")
  public Long getUpdatedEpochMillis() {
    return updatedEpochMillis;
  }

  public ExternalLink name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the external link.  Will be displayed in context (right-click) menus on charts
   *
   * @return name
   **/
  @ApiModelProperty(required = true, value = "Name of the external link.  Will be displayed in context (right-click) menus on charts")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalLink externalLink = (ExternalLink) o;
    return Objects.equals(this.description, externalLink.description) &&
        Objects.equals(this.creatorId, externalLink.creatorId) &&
        Objects.equals(this.updaterId, externalLink.updaterId) &&
        Objects.equals(this.id, externalLink.id) &&
        Objects.equals(this.template, externalLink.template) &&
        Objects.equals(this.metricFilterRegex, externalLink.metricFilterRegex) &&
        Objects.equals(this.sourceFilterRegex, externalLink.sourceFilterRegex) &&
        Objects.equals(this.pointTagFilterRegexes, externalLink.pointTagFilterRegexes) &&
        Objects.equals(this.createdEpochMillis, externalLink.createdEpochMillis) &&
        Objects.equals(this.updatedEpochMillis, externalLink.updatedEpochMillis) &&
        Objects.equals(this.name, externalLink.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, creatorId, updaterId, id, template, metricFilterRegex, sourceFilterRegex, pointTagFilterRegexes, createdEpochMillis, updatedEpochMillis, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalLink {\n");

    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    updaterId: ").append(toIndentedString(updaterId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    metricFilterRegex: ").append(toIndentedString(metricFilterRegex)).append("\n");
    sb.append("    sourceFilterRegex: ").append(toIndentedString(sourceFilterRegex)).append("\n");
    sb.append("    pointTagFilterRegexes: ").append(toIndentedString(pointTagFilterRegexes)).append("\n");
    sb.append("    createdEpochMillis: ").append(toIndentedString(createdEpochMillis)).append("\n");
    sb.append("    updatedEpochMillis: ").append(toIndentedString(updatedEpochMillis)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

