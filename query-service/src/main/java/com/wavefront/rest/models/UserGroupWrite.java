/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Wavefront user group entity for write requests
 */
@ApiModel(description = "Wavefront user group entity for write requests")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class UserGroupWrite {
  @SerializedName("permissions")
  private List<String> permissions = new ArrayList<String>();

  @SerializedName("customer")
  private String customer = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("createdEpochMillis")
  private Long createdEpochMillis = null;

  @SerializedName("name")
  private String name = null;

  public UserGroupWrite permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public UserGroupWrite addPermissionsItem(String permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * List of permissions the user group has been granted access to
   *
   * @return permissions
   **/
  @ApiModelProperty(required = true, value = "List of permissions the user group has been granted access to")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  /**
   * The id of the customer to which the user group belongs
   *
   * @return customer
   **/
  @ApiModelProperty(value = "The id of the customer to which the user group belongs")
  public String getCustomer() {
    return customer;
  }

  public UserGroupWrite id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the user group
   *
   * @return id
   **/
  @ApiModelProperty(value = "The unique identifier of the user group")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  /**
   * Get createdEpochMillis
   *
   * @return createdEpochMillis
   **/
  @ApiModelProperty(value = "")
  public Long getCreatedEpochMillis() {
    return createdEpochMillis;
  }

  public UserGroupWrite name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the user group
   *
   * @return name
   **/
  @ApiModelProperty(required = true, value = "The name of the user group")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroupWrite userGroupWrite = (UserGroupWrite) o;
    return Objects.equals(this.permissions, userGroupWrite.permissions) &&
        Objects.equals(this.customer, userGroupWrite.customer) &&
        Objects.equals(this.id, userGroupWrite.id) &&
        Objects.equals(this.createdEpochMillis, userGroupWrite.createdEpochMillis) &&
        Objects.equals(this.name, userGroupWrite.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(permissions, customer, id, createdEpochMillis, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroupWrite {\n");

    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdEpochMillis: ").append(toIndentedString(createdEpochMillis)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

