/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * An integration that aliases this one
 */
@ApiModel(description = "An integration that aliases this one")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class IntegrationAlias {
  @SerializedName("icon")
  private String icon = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("baseUrl")
  private String baseUrl = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  public IntegrationAlias icon(String icon) {
    this.icon = icon;
    return this;
  }

  /**
   * Icon path of the alias Integration
   *
   * @return icon
   **/
  @ApiModelProperty(value = "Icon path of the alias Integration")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public IntegrationAlias description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the alias Integration
   *
   * @return description
   **/
  @ApiModelProperty(value = "Description of the alias Integration")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public IntegrationAlias baseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
    return this;
  }

  /**
   * Base URL of this alias Integration
   *
   * @return baseUrl
   **/
  @ApiModelProperty(value = "Base URL of this alias Integration")
  public String getBaseUrl() {
    return baseUrl;
  }

  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }

  public IntegrationAlias id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of the alias Integration
   *
   * @return id
   **/
  @ApiModelProperty(value = "ID of the alias Integration")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public IntegrationAlias name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the alias Integration
   *
   * @return name
   **/
  @ApiModelProperty(value = "Name of the alias Integration")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationAlias integrationAlias = (IntegrationAlias) o;
    return Objects.equals(this.icon, integrationAlias.icon) &&
        Objects.equals(this.description, integrationAlias.description) &&
        Objects.equals(this.baseUrl, integrationAlias.baseUrl) &&
        Objects.equals(this.id, integrationAlias.id) &&
        Objects.equals(this.name, integrationAlias.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(icon, description, baseUrl, id, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationAlias {\n");

    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

