/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.UserGroupPropertiesDTO;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Api model for user group
 */
@ApiModel(description = "Api model for user group")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class UserGroup {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("permissions")
  private List<String> permissions = new ArrayList<String>();

  @SerializedName("customer")
  private String customer = null;

  @SerializedName("users")
  private List<String> users = null;

  @SerializedName("userCount")
  private Integer userCount = null;

  @SerializedName("properties")
  private UserGroupPropertiesDTO properties = null;

  public UserGroup id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID for the user group
   *
   * @return id
   **/
  @ApiModelProperty(example = "04e5fd3a-c916-45aa-923c-2fa02e9eddac", value = "Unique ID for the user group")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UserGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the user group
   *
   * @return name
   **/
  @ApiModelProperty(required = true, value = "Name of the user group")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UserGroup permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public UserGroup addPermissionsItem(String permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * Permission assigned to the user group
   *
   * @return permissions
   **/
  @ApiModelProperty(required = true, value = "Permission assigned to the user group")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  public UserGroup customer(String customer) {
    this.customer = customer;
    return this;
  }

  /**
   * ID of the customer to which the user group belongs
   *
   * @return customer
   **/
  @ApiModelProperty(value = "ID of the customer to which the user group belongs")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public UserGroup users(List<String> users) {
    this.users = users;
    return this;
  }

  public UserGroup addUsersItem(String usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<String>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * List of Users that are members of the user group. Maybe incomplete.
   *
   * @return users
   **/
  @ApiModelProperty(value = "List of Users that are members of the user group. Maybe incomplete.")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public UserGroup userCount(Integer userCount) {
    this.userCount = userCount;
    return this;
  }

  /**
   * Total number of users that are members of the user group
   *
   * @return userCount
   **/
  @ApiModelProperty(value = "Total number of users that are members of the user group")
  public Integer getUserCount() {
    return userCount;
  }

  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }

  public UserGroup properties(UserGroupPropertiesDTO properties) {
    this.properties = properties;
    return this;
  }

  /**
   * The properties of the user group(name editable, users editable, etc.)
   *
   * @return properties
   **/
  @ApiModelProperty(value = "The properties of the user group(name editable, users editable, etc.)")
  public UserGroupPropertiesDTO getProperties() {
    return properties;
  }

  public void setProperties(UserGroupPropertiesDTO properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroup userGroup = (UserGroup) o;
    return Objects.equals(this.id, userGroup.id) &&
        Objects.equals(this.name, userGroup.name) &&
        Objects.equals(this.permissions, userGroup.permissions) &&
        Objects.equals(this.customer, userGroup.customer) &&
        Objects.equals(this.users, userGroup.users) &&
        Objects.equals(this.userCount, userGroup.userCount) &&
        Objects.equals(this.properties, userGroup.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, permissions, customer, users, userCount, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroup {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

