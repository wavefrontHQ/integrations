/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * UserGroupPropertiesDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class UserGroupPropertiesDTO {
  @SerializedName("nameEditable")
  private Boolean nameEditable = null;

  @SerializedName("permissionsEditable")
  private Boolean permissionsEditable = null;

  @SerializedName("usersEditable")
  private Boolean usersEditable = null;

  public UserGroupPropertiesDTO nameEditable(Boolean nameEditable) {
    this.nameEditable = nameEditable;
    return this;
  }

  /**
   * Get nameEditable
   *
   * @return nameEditable
   **/
  @ApiModelProperty(value = "")
  public Boolean isNameEditable() {
    return nameEditable;
  }

  public void setNameEditable(Boolean nameEditable) {
    this.nameEditable = nameEditable;
  }

  public UserGroupPropertiesDTO permissionsEditable(Boolean permissionsEditable) {
    this.permissionsEditable = permissionsEditable;
    return this;
  }

  /**
   * Get permissionsEditable
   *
   * @return permissionsEditable
   **/
  @ApiModelProperty(value = "")
  public Boolean isPermissionsEditable() {
    return permissionsEditable;
  }

  public void setPermissionsEditable(Boolean permissionsEditable) {
    this.permissionsEditable = permissionsEditable;
  }

  public UserGroupPropertiesDTO usersEditable(Boolean usersEditable) {
    this.usersEditable = usersEditable;
    return this;
  }

  /**
   * Get usersEditable
   *
   * @return usersEditable
   **/
  @ApiModelProperty(value = "")
  public Boolean isUsersEditable() {
    return usersEditable;
  }

  public void setUsersEditable(Boolean usersEditable) {
    this.usersEditable = usersEditable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroupPropertiesDTO userGroupPropertiesDTO = (UserGroupPropertiesDTO) o;
    return Objects.equals(this.nameEditable, userGroupPropertiesDTO.nameEditable) &&
        Objects.equals(this.permissionsEditable, userGroupPropertiesDTO.permissionsEditable) &&
        Objects.equals(this.usersEditable, userGroupPropertiesDTO.usersEditable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nameEditable, permissionsEditable, usersEditable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroupPropertiesDTO {\n");

    sb.append("    nameEditable: ").append(toIndentedString(nameEditable)).append("\n");
    sb.append("    permissionsEditable: ").append(toIndentedString(permissionsEditable)).append("\n");
    sb.append("    usersEditable: ").append(toIndentedString(usersEditable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

