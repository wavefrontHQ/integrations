/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.SearchQuery;
import com.wavefront.rest.models.Sorting;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SortableSearchRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class SortableSearchRequest {
  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("offset")
  private Integer offset = null;

  @SerializedName("query")
  private List<SearchQuery> query = null;

  @SerializedName("sort")
  private Sorting sort = null;

  public SortableSearchRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * The number of results to return.  Default: 100
   *
   * @return limit
   **/
  @ApiModelProperty(value = "The number of results to return.  Default: 100")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public SortableSearchRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * The number of results to skip before returning values.  Default: 0
   *
   * @return offset
   **/
  @ApiModelProperty(value = "The number of results to skip before returning values.  Default: 0")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public SortableSearchRequest query(List<SearchQuery> query) {
    this.query = query;
    return this;
  }

  public SortableSearchRequest addQueryItem(SearchQuery queryItem) {
    if (this.query == null) {
      this.query = new ArrayList<SearchQuery>();
    }
    this.query.add(queryItem);
    return this;
  }

  /**
   * A list of queries by which to limit the search results.  Entities that match ALL queries in the list are returned
   *
   * @return query
   **/
  @ApiModelProperty(value = "A list of queries by which to limit the search results.  Entities that match ALL queries in the list are returned")
  public List<SearchQuery> getQuery() {
    return query;
  }

  public void setQuery(List<SearchQuery> query) {
    this.query = query;
  }

  public SortableSearchRequest sort(Sorting sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   *
   * @return sort
   **/
  @ApiModelProperty(value = "")
  public Sorting getSort() {
    return sort;
  }

  public void setSort(Sorting sort) {
    this.sort = sort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SortableSearchRequest sortableSearchRequest = (SortableSearchRequest) o;
    return Objects.equals(this.limit, sortableSearchRequest.limit) &&
        Objects.equals(this.offset, sortableSearchRequest.offset) &&
        Objects.equals(this.query, sortableSearchRequest.query) &&
        Objects.equals(this.sort, sortableSearchRequest.sort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, offset, query, sort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SortableSearchRequest {\n");

    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

