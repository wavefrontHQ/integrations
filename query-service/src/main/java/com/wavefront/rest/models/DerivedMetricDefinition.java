/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.WFTags;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Wavefront Derived Metric
 */
@ApiModel(description = "Wavefront Derived Metric")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class DerivedMetricDefinition {
  @SerializedName("created")
  private Long created = null;

  @SerializedName("minutes")
  private Integer minutes = null;

  @SerializedName("tags")
  private WFTags tags = null;

  @SerializedName("status")
  private List<String> status = null;

  @SerializedName("updated")
  private Long updated = null;

  @SerializedName("query")
  private String query = null;

  @SerializedName("includeObsoleteMetrics")
  private Boolean includeObsoleteMetrics = null;

  @SerializedName("processRateMinutes")
  private Integer processRateMinutes = null;

  @SerializedName("lastProcessedMillis")
  private Long lastProcessedMillis = null;

  @SerializedName("updateUserId")
  private String updateUserId = null;

  @SerializedName("additionalInformation")
  private String additionalInformation = null;

  @SerializedName("lastQueryTime")
  private Long lastQueryTime = null;

  @SerializedName("inTrash")
  private Boolean inTrash = null;

  @SerializedName("queryFailing")
  private Boolean queryFailing = null;

  @SerializedName("createUserId")
  private String createUserId = null;

  @SerializedName("lastFailedTime")
  private Long lastFailedTime = null;

  @SerializedName("pointsScannedAtLastQuery")
  private Long pointsScannedAtLastQuery = null;

  @SerializedName("metricsUsed")
  private List<String> metricsUsed = null;

  @SerializedName("hostsUsed")
  private List<String> hostsUsed = null;

  @SerializedName("creatorId")
  private String creatorId = null;

  @SerializedName("updaterId")
  private String updaterId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lastErrorMessage")
  private String lastErrorMessage = null;

  @SerializedName("queryQBEnabled")
  private Boolean queryQBEnabled = null;

  @SerializedName("queryQBSerialization")
  private String queryQBSerialization = null;

  @SerializedName("createdEpochMillis")
  private Long createdEpochMillis = null;

  @SerializedName("updatedEpochMillis")
  private Long updatedEpochMillis = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("name")
  private String name = null;

  /**
   * When this derived metric was created, in epoch millis
   *
   * @return created
   **/
  @ApiModelProperty(value = "When this derived metric was created, in epoch millis")
  public Long getCreated() {
    return created;
  }

  public DerivedMetricDefinition minutes(Integer minutes) {
    this.minutes = minutes;
    return this;
  }

  /**
   * How frequently the query generating the derived metric is run
   *
   * @return minutes
   **/
  @ApiModelProperty(required = true, value = "How frequently the query generating the derived metric is run")
  public Integer getMinutes() {
    return minutes;
  }

  public void setMinutes(Integer minutes) {
    this.minutes = minutes;
  }

  public DerivedMetricDefinition tags(WFTags tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   *
   * @return tags
   **/
  @ApiModelProperty(value = "")
  public WFTags getTags() {
    return tags;
  }

  public void setTags(WFTags tags) {
    this.tags = tags;
  }

  public DerivedMetricDefinition status(List<String> status) {
    this.status = status;
    return this;
  }

  public DerivedMetricDefinition addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<String>();
    }
    this.status.add(statusItem);
    return this;
  }

  /**
   * Lists the current state of the derived metric. Can be one or more of: INVALID, ACTIVE, TRASH, NO_DATA
   *
   * @return status
   **/
  @ApiModelProperty(value = "Lists the current state of the derived metric. Can be one or more of: INVALID, ACTIVE, TRASH, NO_DATA")
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }

  /**
   * When the derived metric definition was last updated, in epoch millis
   *
   * @return updated
   **/
  @ApiModelProperty(value = "When the derived metric definition was last updated, in epoch millis")
  public Long getUpdated() {
    return updated;
  }

  public DerivedMetricDefinition query(String query) {
    this.query = query;
    return this;
  }

  /**
   * A Wavefront query that is evaluated at regular intervals (default 1m).
   *
   * @return query
   **/
  @ApiModelProperty(required = true, value = "A Wavefront query that is evaluated at regular intervals (default 1m).")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public DerivedMetricDefinition includeObsoleteMetrics(Boolean includeObsoleteMetrics) {
    this.includeObsoleteMetrics = includeObsoleteMetrics;
    return this;
  }

  /**
   * Whether to include obsolete metrics in query
   *
   * @return includeObsoleteMetrics
   **/
  @ApiModelProperty(value = "Whether to include obsolete metrics in query")
  public Boolean isIncludeObsoleteMetrics() {
    return includeObsoleteMetrics;
  }

  public void setIncludeObsoleteMetrics(Boolean includeObsoleteMetrics) {
    this.includeObsoleteMetrics = includeObsoleteMetrics;
  }

  public DerivedMetricDefinition processRateMinutes(Integer processRateMinutes) {
    this.processRateMinutes = processRateMinutes;
    return this;
  }

  /**
   * The interval between executing the query, in minutes.  Defaults to 1 minute
   *
   * @return processRateMinutes
   **/
  @ApiModelProperty(value = "The interval between executing the query, in minutes.  Defaults to 1 minute")
  public Integer getProcessRateMinutes() {
    return processRateMinutes;
  }

  public void setProcessRateMinutes(Integer processRateMinutes) {
    this.processRateMinutes = processRateMinutes;
  }

  /**
   * The last time when the derived metric query was run, in epoch millis
   *
   * @return lastProcessedMillis
   **/
  @ApiModelProperty(value = "The last time when the derived metric query was run, in epoch millis")
  public Long getLastProcessedMillis() {
    return lastProcessedMillis;
  }

  /**
   * The user that last updated this derived metric definition
   *
   * @return updateUserId
   **/
  @ApiModelProperty(value = "The user that last updated this derived metric definition")
  public String getUpdateUserId() {
    return updateUserId;
  }

  public DerivedMetricDefinition additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

  /**
   * User-supplied additional explanatory information for the derived metric
   *
   * @return additionalInformation
   **/
  @ApiModelProperty(value = "User-supplied additional explanatory information for the derived metric")
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }

  /**
   * Time for the query execute, averaged on hourly basis
   *
   * @return lastQueryTime
   **/
  @ApiModelProperty(value = "Time for the query execute, averaged on hourly basis")
  public Long getLastQueryTime() {
    return lastQueryTime;
  }

  public DerivedMetricDefinition inTrash(Boolean inTrash) {
    this.inTrash = inTrash;
    return this;
  }

  /**
   * Get inTrash
   *
   * @return inTrash
   **/
  @ApiModelProperty(value = "")
  public Boolean isInTrash() {
    return inTrash;
  }

  public void setInTrash(Boolean inTrash) {
    this.inTrash = inTrash;
  }

  /**
   * Whether there was an exception when the query last ran
   *
   * @return queryFailing
   **/
  @ApiModelProperty(value = "Whether there was an exception when the query last ran")
  public Boolean isQueryFailing() {
    return queryFailing;
  }

  /**
   * Get createUserId
   *
   * @return createUserId
   **/
  @ApiModelProperty(value = "")
  public String getCreateUserId() {
    return createUserId;
  }

  /**
   * The time of the last error encountered when running the query, in epoch millis
   *
   * @return lastFailedTime
   **/
  @ApiModelProperty(value = "The time of the last error encountered when running the query, in epoch millis")
  public Long getLastFailedTime() {
    return lastFailedTime;
  }

  /**
   * A derived field recording the number of data points scanned when the system last computed the query
   *
   * @return pointsScannedAtLastQuery
   **/
  @ApiModelProperty(value = "A derived field recording the number of data points scanned when the system last computed the query")
  public Long getPointsScannedAtLastQuery() {
    return pointsScannedAtLastQuery;
  }

  public DerivedMetricDefinition metricsUsed(List<String> metricsUsed) {
    this.metricsUsed = metricsUsed;
    return this;
  }

  public DerivedMetricDefinition addMetricsUsedItem(String metricsUsedItem) {
    if (this.metricsUsed == null) {
      this.metricsUsed = new ArrayList<String>();
    }
    this.metricsUsed.add(metricsUsedItem);
    return this;
  }

  /**
   * Number of metrics checked by the query
   *
   * @return metricsUsed
   **/
  @ApiModelProperty(value = "Number of metrics checked by the query")
  public List<String> getMetricsUsed() {
    return metricsUsed;
  }

  public void setMetricsUsed(List<String> metricsUsed) {
    this.metricsUsed = metricsUsed;
  }

  public DerivedMetricDefinition hostsUsed(List<String> hostsUsed) {
    this.hostsUsed = hostsUsed;
    return this;
  }

  public DerivedMetricDefinition addHostsUsedItem(String hostsUsedItem) {
    if (this.hostsUsed == null) {
      this.hostsUsed = new ArrayList<String>();
    }
    this.hostsUsed.add(hostsUsedItem);
    return this;
  }

  /**
   * Number of hosts checked by the query
   *
   * @return hostsUsed
   **/
  @ApiModelProperty(value = "Number of hosts checked by the query")
  public List<String> getHostsUsed() {
    return hostsUsed;
  }

  public void setHostsUsed(List<String> hostsUsed) {
    this.hostsUsed = hostsUsed;
  }

  /**
   * Get creatorId
   *
   * @return creatorId
   **/
  @ApiModelProperty(value = "")
  public String getCreatorId() {
    return creatorId;
  }

  /**
   * Get updaterId
   *
   * @return updaterId
   **/
  @ApiModelProperty(value = "")
  public String getUpdaterId() {
    return updaterId;
  }

  public DerivedMetricDefinition id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  /**
   * The last error encountered when running the query
   *
   * @return lastErrorMessage
   **/
  @ApiModelProperty(value = "The last error encountered when running the query")
  public String getLastErrorMessage() {
    return lastErrorMessage;
  }

  public DerivedMetricDefinition queryQBEnabled(Boolean queryQBEnabled) {
    this.queryQBEnabled = queryQBEnabled;
    return this;
  }

  /**
   * Whether the query was created using the Query Builder. Default false
   *
   * @return queryQBEnabled
   **/
  @ApiModelProperty(value = "Whether the query was created using the Query Builder. Default false")
  public Boolean isQueryQBEnabled() {
    return queryQBEnabled;
  }

  public void setQueryQBEnabled(Boolean queryQBEnabled) {
    this.queryQBEnabled = queryQBEnabled;
  }

  public DerivedMetricDefinition queryQBSerialization(String queryQBSerialization) {
    this.queryQBSerialization = queryQBSerialization;
    return this;
  }

  /**
   * The special serialization of the Query Builder that corresponds to the query.  Applicable only when queryQBEnabled is true
   *
   * @return queryQBSerialization
   **/
  @ApiModelProperty(value = "The special serialization of the Query Builder that corresponds to the query.  Applicable only when queryQBEnabled is true")
  public String getQueryQBSerialization() {
    return queryQBSerialization;
  }

  public void setQueryQBSerialization(String queryQBSerialization) {
    this.queryQBSerialization = queryQBSerialization;
  }

  /**
   * Get createdEpochMillis
   *
   * @return createdEpochMillis
   **/
  @ApiModelProperty(value = "")
  public Long getCreatedEpochMillis() {
    return createdEpochMillis;
  }

  /**
   * Get updatedEpochMillis
   *
   * @return updatedEpochMillis
   **/
  @ApiModelProperty(value = "")
  public Long getUpdatedEpochMillis() {
    return updatedEpochMillis;
  }

  /**
   * Get deleted
   *
   * @return deleted
   **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public DerivedMetricDefinition name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DerivedMetricDefinition derivedMetricDefinition = (DerivedMetricDefinition) o;
    return Objects.equals(this.created, derivedMetricDefinition.created) &&
        Objects.equals(this.minutes, derivedMetricDefinition.minutes) &&
        Objects.equals(this.tags, derivedMetricDefinition.tags) &&
        Objects.equals(this.status, derivedMetricDefinition.status) &&
        Objects.equals(this.updated, derivedMetricDefinition.updated) &&
        Objects.equals(this.query, derivedMetricDefinition.query) &&
        Objects.equals(this.includeObsoleteMetrics, derivedMetricDefinition.includeObsoleteMetrics) &&
        Objects.equals(this.processRateMinutes, derivedMetricDefinition.processRateMinutes) &&
        Objects.equals(this.lastProcessedMillis, derivedMetricDefinition.lastProcessedMillis) &&
        Objects.equals(this.updateUserId, derivedMetricDefinition.updateUserId) &&
        Objects.equals(this.additionalInformation, derivedMetricDefinition.additionalInformation) &&
        Objects.equals(this.lastQueryTime, derivedMetricDefinition.lastQueryTime) &&
        Objects.equals(this.inTrash, derivedMetricDefinition.inTrash) &&
        Objects.equals(this.queryFailing, derivedMetricDefinition.queryFailing) &&
        Objects.equals(this.createUserId, derivedMetricDefinition.createUserId) &&
        Objects.equals(this.lastFailedTime, derivedMetricDefinition.lastFailedTime) &&
        Objects.equals(this.pointsScannedAtLastQuery, derivedMetricDefinition.pointsScannedAtLastQuery) &&
        Objects.equals(this.metricsUsed, derivedMetricDefinition.metricsUsed) &&
        Objects.equals(this.hostsUsed, derivedMetricDefinition.hostsUsed) &&
        Objects.equals(this.creatorId, derivedMetricDefinition.creatorId) &&
        Objects.equals(this.updaterId, derivedMetricDefinition.updaterId) &&
        Objects.equals(this.id, derivedMetricDefinition.id) &&
        Objects.equals(this.lastErrorMessage, derivedMetricDefinition.lastErrorMessage) &&
        Objects.equals(this.queryQBEnabled, derivedMetricDefinition.queryQBEnabled) &&
        Objects.equals(this.queryQBSerialization, derivedMetricDefinition.queryQBSerialization) &&
        Objects.equals(this.createdEpochMillis, derivedMetricDefinition.createdEpochMillis) &&
        Objects.equals(this.updatedEpochMillis, derivedMetricDefinition.updatedEpochMillis) &&
        Objects.equals(this.deleted, derivedMetricDefinition.deleted) &&
        Objects.equals(this.name, derivedMetricDefinition.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, minutes, tags, status, updated, query, includeObsoleteMetrics, processRateMinutes, lastProcessedMillis, updateUserId, additionalInformation, lastQueryTime, inTrash, queryFailing, createUserId, lastFailedTime, pointsScannedAtLastQuery, metricsUsed, hostsUsed, creatorId, updaterId, id, lastErrorMessage, queryQBEnabled, queryQBSerialization, createdEpochMillis, updatedEpochMillis, deleted, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DerivedMetricDefinition {\n");

    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    includeObsoleteMetrics: ").append(toIndentedString(includeObsoleteMetrics)).append("\n");
    sb.append("    processRateMinutes: ").append(toIndentedString(processRateMinutes)).append("\n");
    sb.append("    lastProcessedMillis: ").append(toIndentedString(lastProcessedMillis)).append("\n");
    sb.append("    updateUserId: ").append(toIndentedString(updateUserId)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    lastQueryTime: ").append(toIndentedString(lastQueryTime)).append("\n");
    sb.append("    inTrash: ").append(toIndentedString(inTrash)).append("\n");
    sb.append("    queryFailing: ").append(toIndentedString(queryFailing)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    lastFailedTime: ").append(toIndentedString(lastFailedTime)).append("\n");
    sb.append("    pointsScannedAtLastQuery: ").append(toIndentedString(pointsScannedAtLastQuery)).append("\n");
    sb.append("    metricsUsed: ").append(toIndentedString(metricsUsed)).append("\n");
    sb.append("    hostsUsed: ").append(toIndentedString(hostsUsed)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    updaterId: ").append(toIndentedString(updaterId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastErrorMessage: ").append(toIndentedString(lastErrorMessage)).append("\n");
    sb.append("    queryQBEnabled: ").append(toIndentedString(queryQBEnabled)).append("\n");
    sb.append("    queryQBSerialization: ").append(toIndentedString(queryQBSerialization)).append("\n");
    sb.append("    createdEpochMillis: ").append(toIndentedString(createdEpochMillis)).append("\n");
    sb.append("    updatedEpochMillis: ").append(toIndentedString(updatedEpochMillis)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

