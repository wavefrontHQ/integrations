/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.Alert;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * A alert definition belonging to a particular integration
 */
@ApiModel(description = "A alert definition belonging to a particular integration")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class IntegrationAlert {
  @SerializedName("description")
  private String description = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("alertObj")
  private Alert alertObj = null;

  @SerializedName("name")
  private String name = null;

  public IntegrationAlert description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Alert description
   *
   * @return description
   **/
  @ApiModelProperty(required = true, value = "Alert description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public IntegrationAlert url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL path to the JSON definition of this alert
   *
   * @return url
   **/
  @ApiModelProperty(required = true, value = "URL path to the JSON definition of this alert")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public IntegrationAlert alertObj(Alert alertObj) {
    this.alertObj = alertObj;
    return this;
  }

  /**
   * Get alertObj
   *
   * @return alertObj
   **/
  @ApiModelProperty(value = "")
  public Alert getAlertObj() {
    return alertObj;
  }

  public void setAlertObj(Alert alertObj) {
    this.alertObj = alertObj;
  }

  public IntegrationAlert name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Alert name
   *
   * @return name
   **/
  @ApiModelProperty(required = true, value = "Alert name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationAlert integrationAlert = (IntegrationAlert) o;
    return Objects.equals(this.description, integrationAlert.description) &&
        Objects.equals(this.url, integrationAlert.url) &&
        Objects.equals(this.alertObj, integrationAlert.alertObj) &&
        Objects.equals(this.name, integrationAlert.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, url, alertObj, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationAlert {\n");

    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    alertObj: ").append(toIndentedString(alertObj)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

