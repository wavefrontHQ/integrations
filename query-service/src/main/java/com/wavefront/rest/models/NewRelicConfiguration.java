/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.NewRelicMetricFilters;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Configurations specific to the NewRelic integration.  Only applicable when the containing Credential has service&#x3D;NEWRELIC
 */
@ApiModel(description = "Configurations specific to the NewRelic integration.  Only applicable when the containing Credential has service=NEWRELIC")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class NewRelicConfiguration {
  @SerializedName("apiKey")
  private String apiKey = null;

  @SerializedName("appFilterRegex")
  private String appFilterRegex = null;

  @SerializedName("hostFilterRegex")
  private String hostFilterRegex = null;

  @SerializedName("newRelicMetricFilters")
  private List<NewRelicMetricFilters> newRelicMetricFilters = null;

  public NewRelicConfiguration apiKey(String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  /**
   * New Relic REST API Key.
   *
   * @return apiKey
   **/
  @ApiModelProperty(required = true, value = "New Relic REST API Key.")
  public String getApiKey() {
    return apiKey;
  }

  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }

  public NewRelicConfiguration appFilterRegex(String appFilterRegex) {
    this.appFilterRegex = appFilterRegex;
    return this;
  }

  /**
   * A regular expression that a application name must match (case-insensitively) in order to collect metrics.
   *
   * @return appFilterRegex
   **/
  @ApiModelProperty(example = "^hostingservice-(prod|dev)*$", value = "A regular expression that a application name must match (case-insensitively) in order to collect metrics.")
  public String getAppFilterRegex() {
    return appFilterRegex;
  }

  public void setAppFilterRegex(String appFilterRegex) {
    this.appFilterRegex = appFilterRegex;
  }

  public NewRelicConfiguration hostFilterRegex(String hostFilterRegex) {
    this.hostFilterRegex = hostFilterRegex;
    return this;
  }

  /**
   * A regular expression that a host name must match (case-insensitively) in order to collect metrics.
   *
   * @return hostFilterRegex
   **/
  @ApiModelProperty(example = "host[1-9].xyz.com", value = "A regular expression that a host name must match (case-insensitively) in order to collect metrics.")
  public String getHostFilterRegex() {
    return hostFilterRegex;
  }

  public void setHostFilterRegex(String hostFilterRegex) {
    this.hostFilterRegex = hostFilterRegex;
  }

  public NewRelicConfiguration newRelicMetricFilters(List<NewRelicMetricFilters> newRelicMetricFilters) {
    this.newRelicMetricFilters = newRelicMetricFilters;
    return this;
  }

  public NewRelicConfiguration addNewRelicMetricFiltersItem(NewRelicMetricFilters newRelicMetricFiltersItem) {
    if (this.newRelicMetricFilters == null) {
      this.newRelicMetricFilters = new ArrayList<NewRelicMetricFilters>();
    }
    this.newRelicMetricFilters.add(newRelicMetricFiltersItem);
    return this;
  }

  /**
   * Application specific metric filter
   *
   * @return newRelicMetricFilters
   **/
  @ApiModelProperty(value = "Application specific metric filter")
  public List<NewRelicMetricFilters> getNewRelicMetricFilters() {
    return newRelicMetricFilters;
  }

  public void setNewRelicMetricFilters(List<NewRelicMetricFilters> newRelicMetricFilters) {
    this.newRelicMetricFilters = newRelicMetricFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewRelicConfiguration newRelicConfiguration = (NewRelicConfiguration) o;
    return Objects.equals(this.apiKey, newRelicConfiguration.apiKey) &&
        Objects.equals(this.appFilterRegex, newRelicConfiguration.appFilterRegex) &&
        Objects.equals(this.hostFilterRegex, newRelicConfiguration.hostFilterRegex) &&
        Objects.equals(this.newRelicMetricFilters, newRelicConfiguration.newRelicMetricFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiKey, appFilterRegex, hostFilterRegex, newRelicMetricFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewRelicConfiguration {\n");

    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    appFilterRegex: ").append(toIndentedString(appFilterRegex)).append("\n");
    sb.append("    hostFilterRegex: ").append(toIndentedString(hostFilterRegex)).append("\n");
    sb.append("    newRelicMetricFilters: ").append(toIndentedString(newRelicMetricFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

