/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.UserGroup;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Model for an user object
 */
@ApiModel(description = "Model for an user object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class UserModel {
  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("customer")
  private String customer = null;

  @SerializedName("ssoId")
  private String ssoId = null;

  @SerializedName("lastSuccessfulLogin")
  private Long lastSuccessfulLogin = null;

  @SerializedName("groups")
  private List<String> groups = new ArrayList<String>();

  @SerializedName("userGroups")
  private List<UserGroup> userGroups = new ArrayList<UserGroup>();

  public UserModel identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * The unique identifier of this user, which must be their valid email address
   *
   * @return identifier
   **/
  @ApiModelProperty(required = true, value = "The unique identifier of this user, which must be their valid email address")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public UserModel customer(String customer) {
    this.customer = customer;
    return this;
  }

  /**
   * The id of the customer to which this user belongs
   *
   * @return customer
   **/
  @ApiModelProperty(required = true, value = "The id of the customer to which this user belongs")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public UserModel ssoId(String ssoId) {
    this.ssoId = ssoId;
    return this;
  }

  /**
   * Get ssoId
   *
   * @return ssoId
   **/
  @ApiModelProperty(value = "")
  public String getSsoId() {
    return ssoId;
  }

  public void setSsoId(String ssoId) {
    this.ssoId = ssoId;
  }

  public UserModel lastSuccessfulLogin(Long lastSuccessfulLogin) {
    this.lastSuccessfulLogin = lastSuccessfulLogin;
    return this;
  }

  /**
   * Get lastSuccessfulLogin
   *
   * @return lastSuccessfulLogin
   **/
  @ApiModelProperty(value = "")
  public Long getLastSuccessfulLogin() {
    return lastSuccessfulLogin;
  }

  public void setLastSuccessfulLogin(Long lastSuccessfulLogin) {
    this.lastSuccessfulLogin = lastSuccessfulLogin;
  }

  public UserModel groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public UserModel addGroupsItem(String groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * The permissions granted to this user
   *
   * @return groups
   **/
  @ApiModelProperty(required = true, value = "The permissions granted to this user")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public UserModel userGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public UserModel addUserGroupsItem(UserGroup userGroupsItem) {
    this.userGroups.add(userGroupsItem);
    return this;
  }

  /**
   * The list of user groups the user belongs to
   *
   * @return userGroups
   **/
  @ApiModelProperty(required = true, value = "The list of user groups the user belongs to")
  public List<UserGroup> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserModel userModel = (UserModel) o;
    return Objects.equals(this.identifier, userModel.identifier) &&
        Objects.equals(this.customer, userModel.customer) &&
        Objects.equals(this.ssoId, userModel.ssoId) &&
        Objects.equals(this.lastSuccessfulLogin, userModel.lastSuccessfulLogin) &&
        Objects.equals(this.groups, userModel.groups) &&
        Objects.equals(this.userGroups, userModel.userGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, customer, ssoId, lastSuccessfulLogin, groups, userGroups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserModel {\n");

    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    ssoId: ").append(toIndentedString(ssoId)).append("\n");
    sb.append("    lastSuccessfulLogin: ").append(toIndentedString(lastSuccessfulLogin)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

