/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.MetricStatus;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Status of this integration
 */
@ApiModel(description = "Status of this integration")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class IntegrationStatus {
  /**
   * Gets or Sets inner
   */
  @JsonAdapter(InnerEnum.Adapter.class)
  public enum InnerEnum {
    VISIBLE("VISIBLE"),

    HIDDEN("HIDDEN"),

    NOT_LOADED("NOT_LOADED");

    private String value;

    InnerEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InnerEnum fromValue(String text) {
      for (InnerEnum b : InnerEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InnerEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InnerEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InnerEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InnerEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("alertStatuses")
  private Map<String, InnerEnum> alertStatuses = new HashMap<String, InnerEnum>();

  /**
   * Status of integration content, e.g. dashboards
   */
  @JsonAdapter(ContentStatusEnum.Adapter.class)
  public enum ContentStatusEnum {
    INVALID("INVALID"),

    NOT_LOADED("NOT_LOADED"),

    HIDDEN("HIDDEN"),

    VISIBLE("VISIBLE");

    private String value;

    ContentStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContentStatusEnum fromValue(String text) {
      for (ContentStatusEnum b : ContentStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ContentStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContentStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContentStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ContentStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("contentStatus")
  private ContentStatusEnum contentStatus = null;

  /**
   * Whether the customer or an automated process has installed the dashboards for this integration
   */
  @JsonAdapter(InstallStatusEnum.Adapter.class)
  public enum InstallStatusEnum {
    UNDECIDED("UNDECIDED"),

    UNINSTALLED("UNINSTALLED"),

    INSTALLED("INSTALLED");

    private String value;

    InstallStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InstallStatusEnum fromValue(String text) {
      for (InstallStatusEnum b : InstallStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InstallStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstallStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InstallStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InstallStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("installStatus")
  private InstallStatusEnum installStatus = null;

  @SerializedName("metricStatuses")
  private Map<String, MetricStatus> metricStatuses = new HashMap<String, MetricStatus>();

  public IntegrationStatus alertStatuses(Map<String, InnerEnum> alertStatuses) {
    this.alertStatuses = alertStatuses;
    return this;
  }

  public IntegrationStatus putAlertStatusesItem(String key, InnerEnum alertStatusesItem) {
    this.alertStatuses.put(key, alertStatusesItem);
    return this;
  }

  /**
   * A Map from the ids of the alerts contained in this integration to their install status.  The install status can take on one of three values, &#x60;VISIBLE&#x60;, &#x60;HIDDEN&#x60;, and &#x60;NOT_LOADED&#x60;
   *
   * @return alertStatuses
   **/
  @ApiModelProperty(required = true, value = "A Map from the ids of the alerts contained in this integration to their install status.  The install status can take on one of three values, `VISIBLE`, `HIDDEN`, and `NOT_LOADED`")
  public Map<String, InnerEnum> getAlertStatuses() {
    return alertStatuses;
  }

  public void setAlertStatuses(Map<String, InnerEnum> alertStatuses) {
    this.alertStatuses = alertStatuses;
  }

  /**
   * Status of integration content, e.g. dashboards
   *
   * @return contentStatus
   **/
  @ApiModelProperty(required = true, value = "Status of integration content, e.g. dashboards")
  public ContentStatusEnum getContentStatus() {
    return contentStatus;
  }

  /**
   * Whether the customer or an automated process has installed the dashboards for this integration
   *
   * @return installStatus
   **/
  @ApiModelProperty(required = true, value = "Whether the customer or an automated process has installed the dashboards for this integration")
  public InstallStatusEnum getInstallStatus() {
    return installStatus;
  }

  public IntegrationStatus metricStatuses(Map<String, MetricStatus> metricStatuses) {
    this.metricStatuses = metricStatuses;
    return this;
  }

  public IntegrationStatus putMetricStatusesItem(String key, MetricStatus metricStatusesItem) {
    this.metricStatuses.put(key, metricStatusesItem);
    return this;
  }

  /**
   * A Map from names of the required metrics to an object representing their reporting status.  The reporting status object has 3 boolean fields denoting whether the metric has been received during the corresponding time period: &#x60;ever&#x60;, &#x60;recentExceptNow&#x60;, and &#x60;now&#x60;.  &#x60;now&#x60; is on the order of a few hours, and &#x60;recentExceptNow&#x60; is on the order of the past few days, excluding the period considered to be &#x60;now&#x60;.
   *
   * @return metricStatuses
   **/
  @ApiModelProperty(required = true, value = "A Map from names of the required metrics to an object representing their reporting status.  The reporting status object has 3 boolean fields denoting whether the metric has been received during the corresponding time period: `ever`, `recentExceptNow`, and `now`.  `now` is on the order of a few hours, and `recentExceptNow` is on the order of the past few days, excluding the period considered to be `now`.")
  public Map<String, MetricStatus> getMetricStatuses() {
    return metricStatuses;
  }

  public void setMetricStatuses(Map<String, MetricStatus> metricStatuses) {
    this.metricStatuses = metricStatuses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationStatus integrationStatus = (IntegrationStatus) o;
    return Objects.equals(this.alertStatuses, integrationStatus.alertStatuses) &&
        Objects.equals(this.contentStatus, integrationStatus.contentStatus) &&
        Objects.equals(this.installStatus, integrationStatus.installStatus) &&
        Objects.equals(this.metricStatuses, integrationStatus.metricStatuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertStatuses, contentStatus, installStatus, metricStatuses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationStatus {\n");

    sb.append("    alertStatuses: ").append(toIndentedString(alertStatuses)).append("\n");
    sb.append("    contentStatus: ").append(toIndentedString(contentStatus)).append("\n");
    sb.append("    installStatus: ").append(toIndentedString(installStatus)).append("\n");
    sb.append("    metricStatuses: ").append(toIndentedString(metricStatuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

