/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * StatsModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class StatsModel {
  @SerializedName("keys")
  private Long keys = null;

  @SerializedName("points")
  private Long points = null;

  @SerializedName("summaries")
  private Long summaries = null;

  @SerializedName("queries")
  private Long queries = null;

  @SerializedName("buffer_keys")
  private Long bufferKeys = null;

  @SerializedName("compacted_keys")
  private Long compactedKeys = null;

  @SerializedName("skipped_compacted_keys")
  private Long skippedCompactedKeys = null;

  @SerializedName("compacted_points")
  private Long compactedPoints = null;

  @SerializedName("cached_compacted_keys")
  private Long cachedCompactedKeys = null;

  @SerializedName("latency")
  private Long latency = null;

  @SerializedName("s3_keys")
  private Long s3Keys = null;

  @SerializedName("cpu_ns")
  private Long cpuNs = null;

  @SerializedName("metrics_used")
  private Long metricsUsed = null;

  @SerializedName("hosts_used")
  private Long hostsUsed = null;

  @SerializedName("query_tasks")
  private Integer queryTasks = null;

  public StatsModel keys(Long keys) {
    this.keys = keys;
    return this;
  }

  /**
   * Get keys
   *
   * @return keys
   **/
  @ApiModelProperty(value = "")
  public Long getKeys() {
    return keys;
  }

  public void setKeys(Long keys) {
    this.keys = keys;
  }

  public StatsModel points(Long points) {
    this.points = points;
    return this;
  }

  /**
   * Get points
   *
   * @return points
   **/
  @ApiModelProperty(value = "")
  public Long getPoints() {
    return points;
  }

  public void setPoints(Long points) {
    this.points = points;
  }

  public StatsModel summaries(Long summaries) {
    this.summaries = summaries;
    return this;
  }

  /**
   * Get summaries
   *
   * @return summaries
   **/
  @ApiModelProperty(value = "")
  public Long getSummaries() {
    return summaries;
  }

  public void setSummaries(Long summaries) {
    this.summaries = summaries;
  }

  public StatsModel queries(Long queries) {
    this.queries = queries;
    return this;
  }

  /**
   * Get queries
   *
   * @return queries
   **/
  @ApiModelProperty(value = "")
  public Long getQueries() {
    return queries;
  }

  public void setQueries(Long queries) {
    this.queries = queries;
  }

  public StatsModel bufferKeys(Long bufferKeys) {
    this.bufferKeys = bufferKeys;
    return this;
  }

  /**
   * Get bufferKeys
   *
   * @return bufferKeys
   **/
  @ApiModelProperty(value = "")
  public Long getBufferKeys() {
    return bufferKeys;
  }

  public void setBufferKeys(Long bufferKeys) {
    this.bufferKeys = bufferKeys;
  }

  public StatsModel compactedKeys(Long compactedKeys) {
    this.compactedKeys = compactedKeys;
    return this;
  }

  /**
   * Get compactedKeys
   *
   * @return compactedKeys
   **/
  @ApiModelProperty(value = "")
  public Long getCompactedKeys() {
    return compactedKeys;
  }

  public void setCompactedKeys(Long compactedKeys) {
    this.compactedKeys = compactedKeys;
  }

  public StatsModel skippedCompactedKeys(Long skippedCompactedKeys) {
    this.skippedCompactedKeys = skippedCompactedKeys;
    return this;
  }

  /**
   * Get skippedCompactedKeys
   *
   * @return skippedCompactedKeys
   **/
  @ApiModelProperty(value = "")
  public Long getSkippedCompactedKeys() {
    return skippedCompactedKeys;
  }

  public void setSkippedCompactedKeys(Long skippedCompactedKeys) {
    this.skippedCompactedKeys = skippedCompactedKeys;
  }

  public StatsModel compactedPoints(Long compactedPoints) {
    this.compactedPoints = compactedPoints;
    return this;
  }

  /**
   * Get compactedPoints
   *
   * @return compactedPoints
   **/
  @ApiModelProperty(value = "")
  public Long getCompactedPoints() {
    return compactedPoints;
  }

  public void setCompactedPoints(Long compactedPoints) {
    this.compactedPoints = compactedPoints;
  }

  public StatsModel cachedCompactedKeys(Long cachedCompactedKeys) {
    this.cachedCompactedKeys = cachedCompactedKeys;
    return this;
  }

  /**
   * Get cachedCompactedKeys
   *
   * @return cachedCompactedKeys
   **/
  @ApiModelProperty(value = "")
  public Long getCachedCompactedKeys() {
    return cachedCompactedKeys;
  }

  public void setCachedCompactedKeys(Long cachedCompactedKeys) {
    this.cachedCompactedKeys = cachedCompactedKeys;
  }

  public StatsModel latency(Long latency) {
    this.latency = latency;
    return this;
  }

  /**
   * Get latency
   *
   * @return latency
   **/
  @ApiModelProperty(value = "")
  public Long getLatency() {
    return latency;
  }

  public void setLatency(Long latency) {
    this.latency = latency;
  }

  public StatsModel s3Keys(Long s3Keys) {
    this.s3Keys = s3Keys;
    return this;
  }

  /**
   * Get s3Keys
   *
   * @return s3Keys
   **/
  @ApiModelProperty(value = "")
  public Long getS3Keys() {
    return s3Keys;
  }

  public void setS3Keys(Long s3Keys) {
    this.s3Keys = s3Keys;
  }

  public StatsModel cpuNs(Long cpuNs) {
    this.cpuNs = cpuNs;
    return this;
  }

  /**
   * Get cpuNs
   *
   * @return cpuNs
   **/
  @ApiModelProperty(value = "")
  public Long getCpuNs() {
    return cpuNs;
  }

  public void setCpuNs(Long cpuNs) {
    this.cpuNs = cpuNs;
  }

  public StatsModel metricsUsed(Long metricsUsed) {
    this.metricsUsed = metricsUsed;
    return this;
  }

  /**
   * Get metricsUsed
   *
   * @return metricsUsed
   **/
  @ApiModelProperty(value = "")
  public Long getMetricsUsed() {
    return metricsUsed;
  }

  public void setMetricsUsed(Long metricsUsed) {
    this.metricsUsed = metricsUsed;
  }

  public StatsModel hostsUsed(Long hostsUsed) {
    this.hostsUsed = hostsUsed;
    return this;
  }

  /**
   * Get hostsUsed
   *
   * @return hostsUsed
   **/
  @ApiModelProperty(value = "")
  public Long getHostsUsed() {
    return hostsUsed;
  }

  public void setHostsUsed(Long hostsUsed) {
    this.hostsUsed = hostsUsed;
  }

  public StatsModel queryTasks(Integer queryTasks) {
    this.queryTasks = queryTasks;
    return this;
  }

  /**
   * Get queryTasks
   *
   * @return queryTasks
   **/
  @ApiModelProperty(value = "")
  public Integer getQueryTasks() {
    return queryTasks;
  }

  public void setQueryTasks(Integer queryTasks) {
    this.queryTasks = queryTasks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatsModel statsModel = (StatsModel) o;
    return Objects.equals(this.keys, statsModel.keys) &&
        Objects.equals(this.points, statsModel.points) &&
        Objects.equals(this.summaries, statsModel.summaries) &&
        Objects.equals(this.queries, statsModel.queries) &&
        Objects.equals(this.bufferKeys, statsModel.bufferKeys) &&
        Objects.equals(this.compactedKeys, statsModel.compactedKeys) &&
        Objects.equals(this.skippedCompactedKeys, statsModel.skippedCompactedKeys) &&
        Objects.equals(this.compactedPoints, statsModel.compactedPoints) &&
        Objects.equals(this.cachedCompactedKeys, statsModel.cachedCompactedKeys) &&
        Objects.equals(this.latency, statsModel.latency) &&
        Objects.equals(this.s3Keys, statsModel.s3Keys) &&
        Objects.equals(this.cpuNs, statsModel.cpuNs) &&
        Objects.equals(this.metricsUsed, statsModel.metricsUsed) &&
        Objects.equals(this.hostsUsed, statsModel.hostsUsed) &&
        Objects.equals(this.queryTasks, statsModel.queryTasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keys, points, summaries, queries, bufferKeys, compactedKeys, skippedCompactedKeys, compactedPoints, cachedCompactedKeys, latency, s3Keys, cpuNs, metricsUsed, hostsUsed, queryTasks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatsModel {\n");

    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    summaries: ").append(toIndentedString(summaries)).append("\n");
    sb.append("    queries: ").append(toIndentedString(queries)).append("\n");
    sb.append("    bufferKeys: ").append(toIndentedString(bufferKeys)).append("\n");
    sb.append("    compactedKeys: ").append(toIndentedString(compactedKeys)).append("\n");
    sb.append("    skippedCompactedKeys: ").append(toIndentedString(skippedCompactedKeys)).append("\n");
    sb.append("    compactedPoints: ").append(toIndentedString(compactedPoints)).append("\n");
    sb.append("    cachedCompactedKeys: ").append(toIndentedString(cachedCompactedKeys)).append("\n");
    sb.append("    latency: ").append(toIndentedString(latency)).append("\n");
    sb.append("    s3Keys: ").append(toIndentedString(s3Keys)).append("\n");
    sb.append("    cpuNs: ").append(toIndentedString(cpuNs)).append("\n");
    sb.append("    metricsUsed: ").append(toIndentedString(metricsUsed)).append("\n");
    sb.append("    hostsUsed: ").append(toIndentedString(hostsUsed)).append("\n");
    sb.append("    queryTasks: ").append(toIndentedString(queryTasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

