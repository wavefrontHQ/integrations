/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.Point;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RawTimeseries
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class RawTimeseries {
  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("points")
  private List<Point> points = new ArrayList<Point>();

  public RawTimeseries tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public RawTimeseries putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Associated tags of the time series
   *
   * @return tags
   **/
  @ApiModelProperty(value = "Associated tags of the time series")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public RawTimeseries points(List<Point> points) {
    this.points = points;
    return this;
  }

  public RawTimeseries addPointsItem(Point pointsItem) {
    this.points.add(pointsItem);
    return this;
  }

  /**
   * Get points
   *
   * @return points
   **/
  @ApiModelProperty(required = true, value = "")
  public List<Point> getPoints() {
    return points;
  }

  public void setPoints(List<Point> points) {
    this.points = points;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RawTimeseries rawTimeseries = (RawTimeseries) o;
    return Objects.equals(this.tags, rawTimeseries.tags) &&
        Objects.equals(this.points, rawTimeseries.points);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, points);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RawTimeseries {\n");

    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

