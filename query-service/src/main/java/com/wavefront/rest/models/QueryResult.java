/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import com.wavefront.rest.models.QueryEvent;
import com.wavefront.rest.models.StatsModel;
import com.wavefront.rest.models.Timeseries;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * QueryResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class QueryResult {
  @SerializedName("warnings")
  private String warnings = null;

  @SerializedName("stats")
  private StatsModel stats = null;

  @SerializedName("events")
  private List<QueryEvent> events = null;

  @SerializedName("timeseries")
  private List<Timeseries> timeseries = null;

  @SerializedName("granularity")
  private Long granularity = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("query")
  private String query = null;

  public QueryResult warnings(String warnings) {
    this.warnings = warnings;
    return this;
  }

  /**
   * The warnings incurred by this query
   *
   * @return warnings
   **/
  @ApiModelProperty(value = "The warnings incurred by this query")
  public String getWarnings() {
    return warnings;
  }

  public void setWarnings(String warnings) {
    this.warnings = warnings;
  }

  public QueryResult stats(StatsModel stats) {
    this.stats = stats;
    return this;
  }

  /**
   * Get stats
   *
   * @return stats
   **/
  @ApiModelProperty(value = "")
  public StatsModel getStats() {
    return stats;
  }

  public void setStats(StatsModel stats) {
    this.stats = stats;
  }

  public QueryResult events(List<QueryEvent> events) {
    this.events = events;
    return this;
  }

  public QueryResult addEventsItem(QueryEvent eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<QueryEvent>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /**
   * Get events
   *
   * @return events
   **/
  @ApiModelProperty(value = "")
  public List<QueryEvent> getEvents() {
    return events;
  }

  public void setEvents(List<QueryEvent> events) {
    this.events = events;
  }

  public QueryResult timeseries(List<Timeseries> timeseries) {
    this.timeseries = timeseries;
    return this;
  }

  public QueryResult addTimeseriesItem(Timeseries timeseriesItem) {
    if (this.timeseries == null) {
      this.timeseries = new ArrayList<Timeseries>();
    }
    this.timeseries.add(timeseriesItem);
    return this;
  }

  /**
   * Get timeseries
   *
   * @return timeseries
   **/
  @ApiModelProperty(value = "")
  public List<Timeseries> getTimeseries() {
    return timeseries;
  }

  public void setTimeseries(List<Timeseries> timeseries) {
    this.timeseries = timeseries;
  }

  public QueryResult granularity(Long granularity) {
    this.granularity = granularity;
    return this;
  }

  /**
   * The granularity of the returned results, in seconds
   *
   * @return granularity
   **/
  @ApiModelProperty(value = "The granularity of the returned results, in seconds")
  public Long getGranularity() {
    return granularity;
  }

  public void setGranularity(Long granularity) {
    this.granularity = granularity;
  }

  public QueryResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of this query
   *
   * @return name
   **/
  @ApiModelProperty(value = "The name of this query")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public QueryResult query(String query) {
    this.query = query;
    return this;
  }

  /**
   * The query used to obtain this result
   *
   * @return query
   **/
  @ApiModelProperty(value = "The query used to obtain this result")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryResult queryResult = (QueryResult) o;
    return Objects.equals(this.warnings, queryResult.warnings) &&
        Objects.equals(this.stats, queryResult.stats) &&
        Objects.equals(this.events, queryResult.events) &&
        Objects.equals(this.timeseries, queryResult.timeseries) &&
        Objects.equals(this.granularity, queryResult.granularity) &&
        Objects.equals(this.name, queryResult.name) &&
        Objects.equals(this.query, queryResult.query);
  }

  @Override
  public int hashCode() {
    return Objects.hash(warnings, stats, events, timeseries, granularity, name, query);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryResult {\n");

    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    timeseries: ").append(toIndentedString(timeseries)).append("\n");
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

