/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CustomerFacingUserObject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class CustomerFacingUserObject {
  @SerializedName("userGroups")
  private List<String> userGroups = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("groups")
  private List<String> groups = null;

  @SerializedName("customer")
  private String customer = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lastSuccessfulLogin")
  private Long lastSuccessfulLogin = null;

  @SerializedName("self")
  private Boolean self = null;

  @SerializedName("escapedIdentifier")
  private String escapedIdentifier = null;

  @SerializedName("gravatarUrl")
  private String gravatarUrl = null;

  public CustomerFacingUserObject userGroups(List<String> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public CustomerFacingUserObject addUserGroupsItem(String userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<String>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

  /**
   * List of user group identifiers this user belongs to
   *
   * @return userGroups
   **/
  @ApiModelProperty(value = "List of user group identifiers this user belongs to")
  public List<String> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<String> userGroups) {
    this.userGroups = userGroups;
  }

  public CustomerFacingUserObject identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * The unique identifier of this user, which should be their valid email address
   *
   * @return identifier
   **/
  @ApiModelProperty(required = true, value = "The unique identifier of this user, which should be their valid email address")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public CustomerFacingUserObject groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public CustomerFacingUserObject addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<String>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * List of permission groups this user has been granted access to
   *
   * @return groups
   **/
  @ApiModelProperty(value = "List of permission groups this user has been granted access to")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public CustomerFacingUserObject customer(String customer) {
    this.customer = customer;
    return this;
  }

  /**
   * The id of the customer to which the user belongs
   *
   * @return customer
   **/
  @ApiModelProperty(required = true, value = "The id of the customer to which the user belongs")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public CustomerFacingUserObject id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of this user, which should be their valid email address
   *
   * @return id
   **/
  @ApiModelProperty(required = true, value = "The unique identifier of this user, which should be their valid email address")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CustomerFacingUserObject lastSuccessfulLogin(Long lastSuccessfulLogin) {
    this.lastSuccessfulLogin = lastSuccessfulLogin;
    return this;
  }

  /**
   * The last time the user logged in, in epoch milliseconds
   *
   * @return lastSuccessfulLogin
   **/
  @ApiModelProperty(value = "The last time the user logged in, in epoch milliseconds")
  public Long getLastSuccessfulLogin() {
    return lastSuccessfulLogin;
  }

  public void setLastSuccessfulLogin(Long lastSuccessfulLogin) {
    this.lastSuccessfulLogin = lastSuccessfulLogin;
  }

  public CustomerFacingUserObject self(Boolean self) {
    this.self = self;
    return this;
  }

  /**
   * Whether this user is the one calling the API
   *
   * @return self
   **/
  @ApiModelProperty(required = true, value = "Whether this user is the one calling the API")
  public Boolean isSelf() {
    return self;
  }

  public void setSelf(Boolean self) {
    this.self = self;
  }

  public CustomerFacingUserObject escapedIdentifier(String escapedIdentifier) {
    this.escapedIdentifier = escapedIdentifier;
    return this;
  }

  /**
   * URL Escaped Identifier
   *
   * @return escapedIdentifier
   **/
  @ApiModelProperty(value = "URL Escaped Identifier")
  public String getEscapedIdentifier() {
    return escapedIdentifier;
  }

  public void setEscapedIdentifier(String escapedIdentifier) {
    this.escapedIdentifier = escapedIdentifier;
  }

  public CustomerFacingUserObject gravatarUrl(String gravatarUrl) {
    this.gravatarUrl = gravatarUrl;
    return this;
  }

  /**
   * URL id For User&#39;s gravatar (see gravatar.com), if one exists.
   *
   * @return gravatarUrl
   **/
  @ApiModelProperty(value = "URL id For User's gravatar (see gravatar.com), if one exists.")
  public String getGravatarUrl() {
    return gravatarUrl;
  }

  public void setGravatarUrl(String gravatarUrl) {
    this.gravatarUrl = gravatarUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerFacingUserObject customerFacingUserObject = (CustomerFacingUserObject) o;
    return Objects.equals(this.userGroups, customerFacingUserObject.userGroups) &&
        Objects.equals(this.identifier, customerFacingUserObject.identifier) &&
        Objects.equals(this.groups, customerFacingUserObject.groups) &&
        Objects.equals(this.customer, customerFacingUserObject.customer) &&
        Objects.equals(this.id, customerFacingUserObject.id) &&
        Objects.equals(this.lastSuccessfulLogin, customerFacingUserObject.lastSuccessfulLogin) &&
        Objects.equals(this.self, customerFacingUserObject.self) &&
        Objects.equals(this.escapedIdentifier, customerFacingUserObject.escapedIdentifier) &&
        Objects.equals(this.gravatarUrl, customerFacingUserObject.gravatarUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userGroups, identifier, groups, customer, id, lastSuccessfulLogin, self, escapedIdentifier, gravatarUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerFacingUserObject {\n");

    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastSuccessfulLogin: ").append(toIndentedString(lastSuccessfulLogin)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    escapedIdentifier: ").append(toIndentedString(escapedIdentifier)).append("\n");
    sb.append("    gravatarUrl: ").append(toIndentedString(gravatarUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

