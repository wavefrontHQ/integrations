/*
 * Wavefront REST API
 * <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wavefront.rest.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Convenience wrapper for the identifier of a unique series, which consists of a source (host) and a metric or aggregation (label)
 */
@ApiModel(description = "Convenience wrapper for the identifier of a unique series, which consists of a source (host) and a metric or aggregation (label)")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T16:34:08.557+05:30")
public class SourceLabelPair {
  @SerializedName("label")
  private String label = null;

  @SerializedName("host")
  private String host = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("firing")
  private Integer firing = null;

  @SerializedName("observed")
  private Integer observed = null;

  public SourceLabelPair label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   *
   * @return label
   **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public SourceLabelPair host(String host) {
    this.host = host;
    return this;
  }

  /**
   * Source (or host).  \&quot;Source\&quot; and \&quot;host\&quot; are synonyms in current versions of wavefront, but the host terminology is deprecated
   *
   * @return host
   **/
  @ApiModelProperty(value = "Source (or host).  \"Source\" and \"host\" are synonyms in current versions of wavefront, but the host terminology is deprecated")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public SourceLabelPair tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public SourceLabelPair putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Get tags
   *
   * @return tags
   **/
  @ApiModelProperty(value = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public SourceLabelPair firing(Integer firing) {
    this.firing = firing;
    return this;
  }

  /**
   * Get firing
   *
   * @return firing
   **/
  @ApiModelProperty(value = "")
  public Integer getFiring() {
    return firing;
  }

  public void setFiring(Integer firing) {
    this.firing = firing;
  }

  public SourceLabelPair observed(Integer observed) {
    this.observed = observed;
    return this;
  }

  /**
   * Get observed
   *
   * @return observed
   **/
  @ApiModelProperty(value = "")
  public Integer getObserved() {
    return observed;
  }

  public void setObserved(Integer observed) {
    this.observed = observed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceLabelPair sourceLabelPair = (SourceLabelPair) o;
    return Objects.equals(this.label, sourceLabelPair.label) &&
        Objects.equals(this.host, sourceLabelPair.host) &&
        Objects.equals(this.tags, sourceLabelPair.tags) &&
        Objects.equals(this.firing, sourceLabelPair.firing) &&
        Objects.equals(this.observed, sourceLabelPair.observed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(label, host, tags, firing, observed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceLabelPair {\n");

    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    firing: ").append(toIndentedString(firing)).append("\n");
    sb.append("    observed: ").append(toIndentedString(observed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

